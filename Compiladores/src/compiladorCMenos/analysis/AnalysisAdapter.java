/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.analysis;

import java.util.*;
import compiladorCMenos.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarIntDeclaracao(AVarIntDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarStrDeclaracao(AVarStrDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizIntDeclaracao(AMatrizIntDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizStrDeclaracao(AMatrizStrDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcedDeclaracao(AProcedDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoIntDeclaracao(AFuncaoIntDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoStrDeclaracao(AFuncaoStrDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoMain(AFuncaoMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamVarIntParametro(AParamVarIntParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamVarStrParametro(AParamVarStrParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamMatrizIntParametro(AParamMatrizIntParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamMatrizStrParametro(AParamMatrizStrParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclVarIntComando(ADeclVarIntComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclVarStrComando(ADeclVarStrComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclMatrizIntComando(ADeclMatrizIntComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclMatrizStrComando(ADeclMatrizStrComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoVarComando(AAtribuicaoVarComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoMatrizComando(AAtribuicaoMatrizComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoComando(AFuncaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoComando(ARetornoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepeticaoComando(ARepeticaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicaoComando(ACondicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorQueExp(AMaiorQueExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorIgualExp(AMaiorIgualExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorQueExp(AMenorQueExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorIgualExp(AMenorIgualExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExp(AIgualExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteExp(ADiferenteExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaExp(ASomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubExp(ASubExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp(AMultExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp(ADivExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExp(AVarExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizExp(AMatrizExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumExp(ANumExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrExp(AStrExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoExp(AFuncaoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveElse(TPChaveElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveIf(TPChaveIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveInt(TPChaveInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveString(TPChaveString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveReturn(TPChaveReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveVoid(TPChaveVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveWhile(TPChaveWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStr(TStr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSub(TSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorI(TMenorI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorI(TMaiorI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDif(TDif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtrib(TAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPVirg(TPVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirg(TVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAPar(TAPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFPar(TFPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTACol(TACol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFCol(TFCol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAChave(TAChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFChave(TFChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentLinha(TComentLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentAnin(TComentAnin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFComentAnin(TFComentAnin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
