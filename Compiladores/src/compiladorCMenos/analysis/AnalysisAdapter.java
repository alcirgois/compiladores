/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.analysis;

import java.util.*;
import compiladorCMenos.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeqDeclaracao(ASeqDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclFuncaoMain(ADeclFuncaoMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDeclaracao(AVariavelDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoDeclaracao(AFuncaoDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDeclVariavel(AVariavelDeclVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizDeclVariavel(AMatrizDeclVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalDeclFuncao(ANormalDeclFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemParametroDeclFuncao(ASemParametroDeclFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValoradoTipo(AValoradoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvaloradoTipo(AAvaloradoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntTipoValorado(AIntTipoValorado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringTipoValorado(AStringTipoValorado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoAvalorado(ATipoAvalorado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeqDeclParametro(ASeqDeclParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclParametroLista(ADeclParametroLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDeclParametro(AVariavelDeclParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizDeclParametro(AMatrizDeclParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABloco(ABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeqComando(ASeqComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemSubComandoComando(ASemSubComandoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepeticaoComando(ARepeticaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicaoComando(ACondicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicaoElseComando(ACondicaoElseComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemSubComandoComandoIfNaoCurto(ASemSubComandoComandoIfNaoCurto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepeticaoIfNaoCurtoComandoIfNaoCurto(ARepeticaoIfNaoCurtoComandoIfNaoCurto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondicaoElseIfNaoCurtoComandoIfNaoCurto(ACondicaoElseIfNaoCurtoComandoIfNaoCurto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoSemSubComando(ABlocoSemSubComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoSemSubComando(ADeclaracaoSemSubComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoSemSubComando(AAtribuicaoSemSubComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoSemSubComando(AFuncaoSemSubComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoSemSubComando(ARetornoSemSubComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelComandoAtribuicao(AVariavelComandoAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizComandoAtribuicao(AMatrizComandoAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoRepeticao(AComandoRepeticao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoCondicao(AComandoCondicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoCondicaoElse(AComandoCondicaoElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoRepeticaoIfNaoCurto(AComandoRepeticaoIfNaoCurto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoCondicaoElseIfNaoCurto(AComandoCondicaoElseIfNaoCurto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoFuncao(AComandoFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeqParametro(ASeqParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroLista(AParametroLista node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoRetorno(AComandoRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpBoolExpGeral(AOpBoolExpGeral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpExpGeral(AExpExpGeral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpSomaExp(AOpSomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoExp(ATermoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpMultTermo(AOpMultTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorTermo(AFatorTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdFator(AIdFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumFator(ANumFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrFator(AStrFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoFator(AFuncaoFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParFator(AParFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorQueOpBool(AMaiorQueOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorOuIgualOpBool(AMaiorOuIgualOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorQueOpBool(AMenorQueOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorOuIgualOpBool(AMenorOuIgualOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualOpBool(AIgualOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteOpBool(ADiferenteOpBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaOpSoma(ASomaOpSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubOpSoma(ASubOpSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultOpMult(AMultOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivOpMult(ADivOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveElse(TPChaveElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveIf(TPChaveIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveInt(TPChaveInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveString(TPChaveString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveReturn(TPChaveReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveVoid(TPChaveVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPChaveWhile(TPChaveWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStr(TStr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSub(TSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorI(TMenorI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorI(TMaiorI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDif(TDif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtrib(TAtrib node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPVirg(TPVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirg(TVirg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAPar(TAPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFPar(TFPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTACol(TACol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFCol(TFCol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAChave(TAChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFChave(TFChave node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentLinha(TComentLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentAnin(TComentAnin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFComentAnin(TFComentAnin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
