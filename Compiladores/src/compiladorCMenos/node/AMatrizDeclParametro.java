/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.node;

import java.util.*;
import compiladorCMenos.analysis.*;

@SuppressWarnings("nls")
public final class AMatrizDeclParametro extends PDeclParametro
{
    private PTipoValorado _tipoValorado_;
    private final LinkedList<TMult> _mult_ = new LinkedList<TMult>();
    private TId _id_;

    public AMatrizDeclParametro()
    {
        // Constructor
    }

    public AMatrizDeclParametro(
        @SuppressWarnings("hiding") PTipoValorado _tipoValorado_,
        @SuppressWarnings("hiding") List<?> _mult_,
        @SuppressWarnings("hiding") TId _id_)
    {
        // Constructor
        setTipoValorado(_tipoValorado_);

        setMult(_mult_);

        setId(_id_);

    }

    @Override
    public Object clone()
    {
        return new AMatrizDeclParametro(
            cloneNode(this._tipoValorado_),
            cloneList(this._mult_),
            cloneNode(this._id_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMatrizDeclParametro(this);
    }

    public PTipoValorado getTipoValorado()
    {
        return this._tipoValorado_;
    }

    public void setTipoValorado(PTipoValorado node)
    {
        if(this._tipoValorado_ != null)
        {
            this._tipoValorado_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoValorado_ = node;
    }

    public LinkedList<TMult> getMult()
    {
        return this._mult_;
    }

    public void setMult(List<?> list)
    {
        for(TMult e : this._mult_)
        {
            e.parent(null);
        }
        this._mult_.clear();

        for(Object obj_e : list)
        {
            TMult e = (TMult) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._mult_.add(e);
        }
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipoValorado_)
            + toString(this._mult_)
            + toString(this._id_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipoValorado_ == child)
        {
            this._tipoValorado_ = null;
            return;
        }

        if(this._mult_.remove(child))
        {
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipoValorado_ == oldChild)
        {
            setTipoValorado((PTipoValorado) newChild);
            return;
        }

        for(ListIterator<TMult> i = this._mult_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((TMult) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
