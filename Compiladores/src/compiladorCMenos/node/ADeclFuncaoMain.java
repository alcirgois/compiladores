/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.node;

import compiladorCMenos.analysis.*;

@SuppressWarnings("nls")
public final class ADeclFuncaoMain extends PDeclFuncaoMain
{
    private PTipoAvalorado _void_;
    private TId _main_;
    private TAPar _aPar_;
    private TPChaveVoid _pChaveVoid_;
    private TFPar _fPar_;
    private PBloco _bloco_;

    public ADeclFuncaoMain()
    {
        // Constructor
    }

    public ADeclFuncaoMain(
        @SuppressWarnings("hiding") PTipoAvalorado _void_,
        @SuppressWarnings("hiding") TId _main_,
        @SuppressWarnings("hiding") TAPar _aPar_,
        @SuppressWarnings("hiding") TPChaveVoid _pChaveVoid_,
        @SuppressWarnings("hiding") TFPar _fPar_,
        @SuppressWarnings("hiding") PBloco _bloco_)
    {
        // Constructor
        setVoid(_void_);

        setMain(_main_);

        setAPar(_aPar_);

        setPChaveVoid(_pChaveVoid_);

        setFPar(_fPar_);

        setBloco(_bloco_);

    }

    @Override
    public Object clone()
    {
        return new ADeclFuncaoMain(
            cloneNode(this._void_),
            cloneNode(this._main_),
            cloneNode(this._aPar_),
            cloneNode(this._pChaveVoid_),
            cloneNode(this._fPar_),
            cloneNode(this._bloco_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclFuncaoMain(this);
    }

    public PTipoAvalorado getVoid()
    {
        return this._void_;
    }

    public void setVoid(PTipoAvalorado node)
    {
        if(this._void_ != null)
        {
            this._void_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._void_ = node;
    }

    public TId getMain()
    {
        return this._main_;
    }

    public void setMain(TId node)
    {
        if(this._main_ != null)
        {
            this._main_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._main_ = node;
    }

    public TAPar getAPar()
    {
        return this._aPar_;
    }

    public void setAPar(TAPar node)
    {
        if(this._aPar_ != null)
        {
            this._aPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aPar_ = node;
    }

    public TPChaveVoid getPChaveVoid()
    {
        return this._pChaveVoid_;
    }

    public void setPChaveVoid(TPChaveVoid node)
    {
        if(this._pChaveVoid_ != null)
        {
            this._pChaveVoid_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pChaveVoid_ = node;
    }

    public TFPar getFPar()
    {
        return this._fPar_;
    }

    public void setFPar(TFPar node)
    {
        if(this._fPar_ != null)
        {
            this._fPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fPar_ = node;
    }

    public PBloco getBloco()
    {
        return this._bloco_;
    }

    public void setBloco(PBloco node)
    {
        if(this._bloco_ != null)
        {
            this._bloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bloco_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._void_)
            + toString(this._main_)
            + toString(this._aPar_)
            + toString(this._pChaveVoid_)
            + toString(this._fPar_)
            + toString(this._bloco_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._void_ == child)
        {
            this._void_ = null;
            return;
        }

        if(this._main_ == child)
        {
            this._main_ = null;
            return;
        }

        if(this._aPar_ == child)
        {
            this._aPar_ = null;
            return;
        }

        if(this._pChaveVoid_ == child)
        {
            this._pChaveVoid_ = null;
            return;
        }

        if(this._fPar_ == child)
        {
            this._fPar_ = null;
            return;
        }

        if(this._bloco_ == child)
        {
            this._bloco_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._void_ == oldChild)
        {
            setVoid((PTipoAvalorado) newChild);
            return;
        }

        if(this._main_ == oldChild)
        {
            setMain((TId) newChild);
            return;
        }

        if(this._aPar_ == oldChild)
        {
            setAPar((TAPar) newChild);
            return;
        }

        if(this._pChaveVoid_ == oldChild)
        {
            setPChaveVoid((TPChaveVoid) newChild);
            return;
        }

        if(this._fPar_ == oldChild)
        {
            setFPar((TFPar) newChild);
            return;
        }

        if(this._bloco_ == oldChild)
        {
            setBloco((PBloco) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
