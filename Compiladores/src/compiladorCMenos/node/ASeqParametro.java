/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.node;

import java.util.*;
import compiladorCMenos.analysis.*;

@SuppressWarnings("nls")
public final class ASeqParametro extends PSeqParametro
{
    private PExpGeral _expGeral_;
    private final LinkedList<PParametroLista> _parametroLista_ = new LinkedList<PParametroLista>();

    public ASeqParametro()
    {
        // Constructor
    }

    public ASeqParametro(
        @SuppressWarnings("hiding") PExpGeral _expGeral_,
        @SuppressWarnings("hiding") List<?> _parametroLista_)
    {
        // Constructor
        setExpGeral(_expGeral_);

        setParametroLista(_parametroLista_);

    }

    @Override
    public Object clone()
    {
        return new ASeqParametro(
            cloneNode(this._expGeral_),
            cloneList(this._parametroLista_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASeqParametro(this);
    }

    public PExpGeral getExpGeral()
    {
        return this._expGeral_;
    }

    public void setExpGeral(PExpGeral node)
    {
        if(this._expGeral_ != null)
        {
            this._expGeral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expGeral_ = node;
    }

    public LinkedList<PParametroLista> getParametroLista()
    {
        return this._parametroLista_;
    }

    public void setParametroLista(List<?> list)
    {
        for(PParametroLista e : this._parametroLista_)
        {
            e.parent(null);
        }
        this._parametroLista_.clear();

        for(Object obj_e : list)
        {
            PParametroLista e = (PParametroLista) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parametroLista_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expGeral_)
            + toString(this._parametroLista_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expGeral_ == child)
        {
            this._expGeral_ = null;
            return;
        }

        if(this._parametroLista_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expGeral_ == oldChild)
        {
            setExpGeral((PExpGeral) newChild);
            return;
        }

        for(ListIterator<PParametroLista> i = this._parametroLista_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParametroLista) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
