/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.node;

import compiladorCMenos.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private PSeqDeclaracao _decls_;
    private PDeclFuncaoMain _funcMain_;

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") PSeqDeclaracao _decls_,
        @SuppressWarnings("hiding") PDeclFuncaoMain _funcMain_)
    {
        // Constructor
        setDecls(_decls_);

        setFuncMain(_funcMain_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneNode(this._decls_),
            cloneNode(this._funcMain_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public PSeqDeclaracao getDecls()
    {
        return this._decls_;
    }

    public void setDecls(PSeqDeclaracao node)
    {
        if(this._decls_ != null)
        {
            this._decls_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decls_ = node;
    }

    public PDeclFuncaoMain getFuncMain()
    {
        return this._funcMain_;
    }

    public void setFuncMain(PDeclFuncaoMain node)
    {
        if(this._funcMain_ != null)
        {
            this._funcMain_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcMain_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decls_)
            + toString(this._funcMain_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decls_ == child)
        {
            this._decls_ = null;
            return;
        }

        if(this._funcMain_ == child)
        {
            this._funcMain_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._decls_ == oldChild)
        {
            setDecls((PSeqDeclaracao) newChild);
            return;
        }

        if(this._funcMain_ == oldChild)
        {
            setFuncMain((PDeclFuncaoMain) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
