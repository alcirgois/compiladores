/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.node;

import compiladorCMenos.analysis.*;

@SuppressWarnings("nls")
public final class AListaSeqParametro extends PSeqParametro
{
    private PSeqParametro _args_;
    private TVirg _virg_;
    private PExpGeral _arg_;

    public AListaSeqParametro()
    {
        // Constructor
    }

    public AListaSeqParametro(
        @SuppressWarnings("hiding") PSeqParametro _args_,
        @SuppressWarnings("hiding") TVirg _virg_,
        @SuppressWarnings("hiding") PExpGeral _arg_)
    {
        // Constructor
        setArgs(_args_);

        setVirg(_virg_);

        setArg(_arg_);

    }

    @Override
    public Object clone()
    {
        return new AListaSeqParametro(
            cloneNode(this._args_),
            cloneNode(this._virg_),
            cloneNode(this._arg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaSeqParametro(this);
    }

    public PSeqParametro getArgs()
    {
        return this._args_;
    }

    public void setArgs(PSeqParametro node)
    {
        if(this._args_ != null)
        {
            this._args_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._args_ = node;
    }

    public TVirg getVirg()
    {
        return this._virg_;
    }

    public void setVirg(TVirg node)
    {
        if(this._virg_ != null)
        {
            this._virg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virg_ = node;
    }

    public PExpGeral getArg()
    {
        return this._arg_;
    }

    public void setArg(PExpGeral node)
    {
        if(this._arg_ != null)
        {
            this._arg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._args_)
            + toString(this._virg_)
            + toString(this._arg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._args_ == child)
        {
            this._args_ = null;
            return;
        }

        if(this._virg_ == child)
        {
            this._virg_ = null;
            return;
        }

        if(this._arg_ == child)
        {
            this._arg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._args_ == oldChild)
        {
            setArgs((PSeqParametro) newChild);
            return;
        }

        if(this._virg_ == oldChild)
        {
            setVirg((TVirg) newChild);
            return;
        }

        if(this._arg_ == oldChild)
        {
            setArg((PExpGeral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
