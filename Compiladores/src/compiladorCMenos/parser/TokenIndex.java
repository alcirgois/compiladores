/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorCMenos.parser;

import compiladorCMenos.node.*;
import compiladorCMenos.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTPChaveElse(@SuppressWarnings("unused") TPChaveElse node)
    {
        this.index = 0;
    }

    @Override
    public void caseTPChaveIf(@SuppressWarnings("unused") TPChaveIf node)
    {
        this.index = 1;
    }

    @Override
    public void caseTPChaveInt(@SuppressWarnings("unused") TPChaveInt node)
    {
        this.index = 2;
    }

    @Override
    public void caseTPChaveString(@SuppressWarnings("unused") TPChaveString node)
    {
        this.index = 3;
    }

    @Override
    public void caseTPChaveReturn(@SuppressWarnings("unused") TPChaveReturn node)
    {
        this.index = 4;
    }

    @Override
    public void caseTPChaveVoid(@SuppressWarnings("unused") TPChaveVoid node)
    {
        this.index = 5;
    }

    @Override
    public void caseTPChaveWhile(@SuppressWarnings("unused") TPChaveWhile node)
    {
        this.index = 6;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 7;
    }

    @Override
    public void caseTNum(@SuppressWarnings("unused") TNum node)
    {
        this.index = 8;
    }

    @Override
    public void caseTStr(@SuppressWarnings("unused") TStr node)
    {
        this.index = 9;
    }

    @Override
    public void caseTSoma(@SuppressWarnings("unused") TSoma node)
    {
        this.index = 10;
    }

    @Override
    public void caseTSub(@SuppressWarnings("unused") TSub node)
    {
        this.index = 11;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 12;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 13;
    }

    @Override
    public void caseTMenor(@SuppressWarnings("unused") TMenor node)
    {
        this.index = 14;
    }

    @Override
    public void caseTMaior(@SuppressWarnings("unused") TMaior node)
    {
        this.index = 15;
    }

    @Override
    public void caseTMenorI(@SuppressWarnings("unused") TMenorI node)
    {
        this.index = 16;
    }

    @Override
    public void caseTMaiorI(@SuppressWarnings("unused") TMaiorI node)
    {
        this.index = 17;
    }

    @Override
    public void caseTIgual(@SuppressWarnings("unused") TIgual node)
    {
        this.index = 18;
    }

    @Override
    public void caseTDif(@SuppressWarnings("unused") TDif node)
    {
        this.index = 19;
    }

    @Override
    public void caseTAtrib(@SuppressWarnings("unused") TAtrib node)
    {
        this.index = 20;
    }

    @Override
    public void caseTPVirg(@SuppressWarnings("unused") TPVirg node)
    {
        this.index = 21;
    }

    @Override
    public void caseTVirg(@SuppressWarnings("unused") TVirg node)
    {
        this.index = 22;
    }

    @Override
    public void caseTAPar(@SuppressWarnings("unused") TAPar node)
    {
        this.index = 23;
    }

    @Override
    public void caseTFPar(@SuppressWarnings("unused") TFPar node)
    {
        this.index = 24;
    }

    @Override
    public void caseTACol(@SuppressWarnings("unused") TACol node)
    {
        this.index = 25;
    }

    @Override
    public void caseTFCol(@SuppressWarnings("unused") TFCol node)
    {
        this.index = 26;
    }

    @Override
    public void caseTAChave(@SuppressWarnings("unused") TAChave node)
    {
        this.index = 27;
    }

    @Override
    public void caseTFChave(@SuppressWarnings("unused") TFChave node)
    {
        this.index = 28;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 29;
    }
}
